#include <stdio.h>
#include <string.h>
#include <stdlib.h>

// 定义rounding函数，用于处理输入的字符串，提取整数部分并去除前导零
char *rounding(char *p)
{
    // 查找小数点的位置
    char *decimal_point = strchr(p, '.');
    // 如果存在小数点，将其替换为字符串终止符，以此来隔离整数部分
    if (decimal_point != NULL)
    {
        *decimal_point = '\0';
    }

    // 为结果分配内存（整数部分）
    char *result = (char *)malloc(strlen(p) + 1);
    if (result == NULL)
    {
        fprintf(stderr, "内存分配失败\n");
        exit(1);
    }

    // 将整数部分复制到结果中
    strcpy(result, p);

    // 去除前导零
    char *start = result;
    while (*start == '0' && *(start + 1) != '\0')
    {
        start++;//移动指针 start，以去除整数部分的前导零。
    }

    // 将不含前导零的起始部分复制到结果中
    memmove(result, start, strlen(start) + 1);

    // 返回结果
    return result;
}

int main()
{
    char num[101]; // 100位数字加上字符串结束符
    if (fgets(num, 101, stdin) == NULL)
    {
        fprintf(stderr, "输入读取错误\n");
        return 1;
    }

    // 如果存在，移除换行符
    num[strcspn(num, "\n")] = '\0';

    // 调用rounding函数处理输入的数字字符串
    char *integer_part = rounding(num);
    // 打印处理后的整数部分
    printf("%s\n", integer_part);

    // 释放分配的内存
    free(integer_part);

    return 0;
}